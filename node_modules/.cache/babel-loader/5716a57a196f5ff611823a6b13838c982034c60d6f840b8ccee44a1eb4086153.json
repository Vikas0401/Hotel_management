{"ast":null,"code":"// Menu Service for managing hotel-specific menus\nimport { getCurrentHotelId } from './authService';\n\n// Default menus for each hotel\nconst defaultMenus = {\n  matoshree: {\n    // Matoshree specializes in traditional Maharashtrian vegetarian food\n    '101': {\n      name: 'Matoshree Special Thali',\n      rate: 250,\n      category: 'Special Thali'\n    },\n    '102': {\n      name: 'Maharashtrian Thali',\n      rate: 180,\n      category: 'Special Thali'\n    },\n    '103': {\n      name: 'Mini Thali',\n      rate: 120,\n      category: 'Special Thali'\n    },\n    // Traditional Snacks\n    '201': {\n      name: 'Matoshree Vada Pav',\n      rate: 30,\n      category: 'Snacks'\n    },\n    '202': {\n      name: 'Misal Pav Special',\n      rate: 90,\n      category: 'Snacks'\n    },\n    '203': {\n      name: 'Sabudana Vada',\n      rate: 60,\n      category: 'Snacks'\n    },\n    '204': {\n      name: 'Bhajiya Plate',\n      rate: 80,\n      category: 'Snacks'\n    },\n    '205': {\n      name: 'Kanda Bhaji',\n      rate: 70,\n      category: 'Snacks'\n    },\n    // Rice Items\n    '301': {\n      name: 'Veg Pulao',\n      rate: 160,\n      category: 'Rice Items'\n    },\n    '302': {\n      name: 'Jeera Rice',\n      rate: 130,\n      category: 'Rice Items'\n    },\n    '303': {\n      name: 'Curd Rice',\n      rate: 100,\n      category: 'Rice Items'\n    },\n    '304': {\n      name: 'Plain Rice',\n      rate: 80,\n      category: 'Rice Items'\n    },\n    // Rotis & Breads\n    '401': {\n      name: 'Bhakri',\n      rate: 25,\n      category: 'Rotis & Breads'\n    },\n    '402': {\n      name: 'Chapati',\n      rate: 18,\n      category: 'Rotis & Breads'\n    },\n    '403': {\n      name: 'Jowar Bhakri',\n      rate: 30,\n      category: 'Rotis & Breads'\n    },\n    '404': {\n      name: 'Thalipeeth',\n      rate: 70,\n      category: 'Rotis & Breads'\n    },\n    // Curry & Sabji\n    '501': {\n      name: 'Bharli Vangi',\n      rate: 140,\n      category: 'Curry & Sabji'\n    },\n    '502': {\n      name: 'Bhendi Masala',\n      rate: 120,\n      category: 'Curry & Sabji'\n    },\n    '503': {\n      name: 'Alu Gobi',\n      rate: 110,\n      category: 'Curry & Sabji'\n    },\n    '504': {\n      name: 'Matki Usal',\n      rate: 100,\n      category: 'Curry & Sabji'\n    },\n    '505': {\n      name: 'Amti (Maharashtrian Dal)',\n      rate: 90,\n      category: 'Curry & Sabji'\n    },\n    // Beverages\n    '601': {\n      name: 'Sol Kadhi',\n      rate: 50,\n      category: 'Beverages'\n    },\n    '602': {\n      name: 'Buttermilk (Taak)',\n      rate: 35,\n      category: 'Beverages'\n    },\n    '603': {\n      name: 'Masala Tea',\n      rate: 25,\n      category: 'Beverages'\n    },\n    '604': {\n      name: 'Filter Coffee',\n      rate: 30,\n      category: 'Beverages'\n    },\n    // Sweets\n    '701': {\n      name: 'Puran Poli',\n      rate: 80,\n      category: 'Sweets'\n    },\n    '702': {\n      name: 'Modak',\n      rate: 60,\n      category: 'Sweets'\n    },\n    '703': {\n      name: 'Shrikhand',\n      rate: 90,\n      category: 'Sweets'\n    },\n    '704': {\n      name: 'Basundi',\n      rate: 85,\n      category: 'Sweets'\n    }\n  },\n  maharashtra: {\n    // Original Maharashtra Hotel menu (from previous implementation)\n    '101': {\n      name: 'Veg Biryani',\n      rate: 180,\n      category: 'Main Course'\n    },\n    '102': {\n      name: 'Chicken Biryani',\n      rate: 220,\n      category: 'Main Course'\n    },\n    '103': {\n      name: 'Mutton Biryani',\n      rate: 280,\n      category: 'Main Course'\n    },\n    '201': {\n      name: 'Vada Pav',\n      rate: 25,\n      category: 'Snacks'\n    },\n    '202': {\n      name: 'Misal Pav',\n      rate: 80,\n      category: 'Snacks'\n    },\n    '301': {\n      name: 'Dal Tadka',\n      rate: 110,\n      category: 'Curry'\n    }\n    // ... (can add more items as needed)\n  }\n};\n\n// Get menu for current hotel\nexport const getHotelMenu = () => {\n  const hotelId = getCurrentHotelId();\n  if (!hotelId) return {};\n\n  // Check if custom menu exists in localStorage\n  const customMenu = localStorage.getItem(`menu_${hotelId}`);\n  if (customMenu) {\n    return JSON.parse(customMenu);\n  }\n\n  // Return default menu\n  return defaultMenus[hotelId] || {};\n};\n\n// Save custom menu for current hotel\nexport const saveHotelMenu = menu => {\n  const hotelId = getCurrentHotelId();\n  if (!hotelId) return false;\n  localStorage.setItem(`menu_${hotelId}`, JSON.stringify(menu));\n  return true;\n};\n\n// Add new menu item\nexport const addMenuItem = (code, item) => {\n  const currentMenu = getHotelMenu();\n  currentMenu[code] = item;\n  return saveHotelMenu(currentMenu);\n};\n\n// Update existing menu item\nexport const updateMenuItem = (code, item) => {\n  const currentMenu = getHotelMenu();\n  if (currentMenu[code]) {\n    currentMenu[code] = item;\n    return saveHotelMenu(currentMenu);\n  }\n  return false;\n};\n\n// Delete menu item\nexport const deleteMenuItem = code => {\n  const currentMenu = getHotelMenu();\n  if (currentMenu[code]) {\n    delete currentMenu[code];\n    return saveHotelMenu(currentMenu);\n  }\n  return false;\n};\n\n// Reset to default menu\nexport const resetToDefaultMenu = () => {\n  const hotelId = getCurrentHotelId();\n  if (!hotelId) return false;\n  localStorage.removeItem(`menu_${hotelId}`);\n  return true;\n};\n\n// Get menu categories\nexport const getMenuCategories = () => {\n  const menu = getHotelMenu();\n  const categories = [...new Set(Object.values(menu).map(item => item.category))];\n  return categories.sort();\n};","map":{"version":3,"names":["getCurrentHotelId","defaultMenus","matoshree","name","rate","category","maharashtra","getHotelMenu","hotelId","customMenu","localStorage","getItem","JSON","parse","saveHotelMenu","menu","setItem","stringify","addMenuItem","code","item","currentMenu","updateMenuItem","deleteMenuItem","resetToDefaultMenu","removeItem","getMenuCategories","categories","Set","Object","values","map","sort"],"sources":["C:/Users/vkale/Documents/Vikas/New project/hotel-website/src/services/menuService.js"],"sourcesContent":["// Menu Service for managing hotel-specific menus\r\nimport { getCurrentHotelId } from './authService';\r\n\r\n// Default menus for each hotel\r\nconst defaultMenus = {\r\n    matoshree: {\r\n        // Matoshree specializes in traditional Maharashtrian vegetarian food\r\n        '101': { name: 'Matoshree Special Thali', rate: 250, category: 'Special Thali' },\r\n        '102': { name: 'Maharashtrian Thali', rate: 180, category: 'Special Thali' },\r\n        '103': { name: 'Mini Thali', rate: 120, category: 'Special Thali' },\r\n        \r\n        // Traditional Snacks\r\n        '201': { name: 'Matoshree Vada Pav', rate: 30, category: 'Snacks' },\r\n        '202': { name: 'Misal Pav Special', rate: 90, category: 'Snacks' },\r\n        '203': { name: 'Sabudana Vada', rate: 60, category: 'Snacks' },\r\n        '204': { name: 'Bhajiya Plate', rate: 80, category: 'Snacks' },\r\n        '205': { name: 'Kanda Bhaji', rate: 70, category: 'Snacks' },\r\n        \r\n        // Rice Items\r\n        '301': { name: 'Veg Pulao', rate: 160, category: 'Rice Items' },\r\n        '302': { name: 'Jeera Rice', rate: 130, category: 'Rice Items' },\r\n        '303': { name: 'Curd Rice', rate: 100, category: 'Rice Items' },\r\n        '304': { name: 'Plain Rice', rate: 80, category: 'Rice Items' },\r\n        \r\n        // Rotis & Breads\r\n        '401': { name: 'Bhakri', rate: 25, category: 'Rotis & Breads' },\r\n        '402': { name: 'Chapati', rate: 18, category: 'Rotis & Breads' },\r\n        '403': { name: 'Jowar Bhakri', rate: 30, category: 'Rotis & Breads' },\r\n        '404': { name: 'Thalipeeth', rate: 70, category: 'Rotis & Breads' },\r\n        \r\n        // Curry & Sabji\r\n        '501': { name: 'Bharli Vangi', rate: 140, category: 'Curry & Sabji' },\r\n        '502': { name: 'Bhendi Masala', rate: 120, category: 'Curry & Sabji' },\r\n        '503': { name: 'Alu Gobi', rate: 110, category: 'Curry & Sabji' },\r\n        '504': { name: 'Matki Usal', rate: 100, category: 'Curry & Sabji' },\r\n        '505': { name: 'Amti (Maharashtrian Dal)', rate: 90, category: 'Curry & Sabji' },\r\n        \r\n        // Beverages\r\n        '601': { name: 'Sol Kadhi', rate: 50, category: 'Beverages' },\r\n        '602': { name: 'Buttermilk (Taak)', rate: 35, category: 'Beverages' },\r\n        '603': { name: 'Masala Tea', rate: 25, category: 'Beverages' },\r\n        '604': { name: 'Filter Coffee', rate: 30, category: 'Beverages' },\r\n        \r\n        // Sweets\r\n        '701': { name: 'Puran Poli', rate: 80, category: 'Sweets' },\r\n        '702': { name: 'Modak', rate: 60, category: 'Sweets' },\r\n        '703': { name: 'Shrikhand', rate: 90, category: 'Sweets' },\r\n        '704': { name: 'Basundi', rate: 85, category: 'Sweets' }\r\n    },\r\n    \r\n    maharashtra: {\r\n        // Original Maharashtra Hotel menu (from previous implementation)\r\n        '101': { name: 'Veg Biryani', rate: 180, category: 'Main Course' },\r\n        '102': { name: 'Chicken Biryani', rate: 220, category: 'Main Course' },\r\n        '103': { name: 'Mutton Biryani', rate: 280, category: 'Main Course' },\r\n        '201': { name: 'Vada Pav', rate: 25, category: 'Snacks' },\r\n        '202': { name: 'Misal Pav', rate: 80, category: 'Snacks' },\r\n        '301': { name: 'Dal Tadka', rate: 110, category: 'Curry' },\r\n        // ... (can add more items as needed)\r\n    }\r\n};\r\n\r\n// Get menu for current hotel\r\nexport const getHotelMenu = () => {\r\n    const hotelId = getCurrentHotelId();\r\n    if (!hotelId) return {};\r\n    \r\n    // Check if custom menu exists in localStorage\r\n    const customMenu = localStorage.getItem(`menu_${hotelId}`);\r\n    if (customMenu) {\r\n        return JSON.parse(customMenu);\r\n    }\r\n    \r\n    // Return default menu\r\n    return defaultMenus[hotelId] || {};\r\n};\r\n\r\n// Save custom menu for current hotel\r\nexport const saveHotelMenu = (menu) => {\r\n    const hotelId = getCurrentHotelId();\r\n    if (!hotelId) return false;\r\n    \r\n    localStorage.setItem(`menu_${hotelId}`, JSON.stringify(menu));\r\n    return true;\r\n};\r\n\r\n// Add new menu item\r\nexport const addMenuItem = (code, item) => {\r\n    const currentMenu = getHotelMenu();\r\n    currentMenu[code] = item;\r\n    return saveHotelMenu(currentMenu);\r\n};\r\n\r\n// Update existing menu item\r\nexport const updateMenuItem = (code, item) => {\r\n    const currentMenu = getHotelMenu();\r\n    if (currentMenu[code]) {\r\n        currentMenu[code] = item;\r\n        return saveHotelMenu(currentMenu);\r\n    }\r\n    return false;\r\n};\r\n\r\n// Delete menu item\r\nexport const deleteMenuItem = (code) => {\r\n    const currentMenu = getHotelMenu();\r\n    if (currentMenu[code]) {\r\n        delete currentMenu[code];\r\n        return saveHotelMenu(currentMenu);\r\n    }\r\n    return false;\r\n};\r\n\r\n// Reset to default menu\r\nexport const resetToDefaultMenu = () => {\r\n    const hotelId = getCurrentHotelId();\r\n    if (!hotelId) return false;\r\n    \r\n    localStorage.removeItem(`menu_${hotelId}`);\r\n    return true;\r\n};\r\n\r\n// Get menu categories\r\nexport const getMenuCategories = () => {\r\n    const menu = getHotelMenu();\r\n    const categories = [...new Set(Object.values(menu).map(item => item.category))];\r\n    return categories.sort();\r\n};"],"mappings":"AAAA;AACA,SAASA,iBAAiB,QAAQ,eAAe;;AAEjD;AACA,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE;IACP;IACA,KAAK,EAAE;MAAEC,IAAI,EAAE,yBAAyB;MAAEC,IAAI,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAgB,CAAC;IAChF,KAAK,EAAE;MAAEF,IAAI,EAAE,qBAAqB;MAAEC,IAAI,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAgB,CAAC;IAC5E,KAAK,EAAE;MAAEF,IAAI,EAAE,YAAY;MAAEC,IAAI,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAgB,CAAC;IAEnE;IACA,KAAK,EAAE;MAAEF,IAAI,EAAE,oBAAoB;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAS,CAAC;IACnE,KAAK,EAAE;MAAEF,IAAI,EAAE,mBAAmB;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAS,CAAC;IAClE,KAAK,EAAE;MAAEF,IAAI,EAAE,eAAe;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAS,CAAC;IAC9D,KAAK,EAAE;MAAEF,IAAI,EAAE,eAAe;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAS,CAAC;IAC9D,KAAK,EAAE;MAAEF,IAAI,EAAE,aAAa;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAS,CAAC;IAE5D;IACA,KAAK,EAAE;MAAEF,IAAI,EAAE,WAAW;MAAEC,IAAI,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAa,CAAC;IAC/D,KAAK,EAAE;MAAEF,IAAI,EAAE,YAAY;MAAEC,IAAI,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAa,CAAC;IAChE,KAAK,EAAE;MAAEF,IAAI,EAAE,WAAW;MAAEC,IAAI,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAa,CAAC;IAC/D,KAAK,EAAE;MAAEF,IAAI,EAAE,YAAY;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAa,CAAC;IAE/D;IACA,KAAK,EAAE;MAAEF,IAAI,EAAE,QAAQ;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAiB,CAAC;IAC/D,KAAK,EAAE;MAAEF,IAAI,EAAE,SAAS;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAiB,CAAC;IAChE,KAAK,EAAE;MAAEF,IAAI,EAAE,cAAc;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAiB,CAAC;IACrE,KAAK,EAAE;MAAEF,IAAI,EAAE,YAAY;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAiB,CAAC;IAEnE;IACA,KAAK,EAAE;MAAEF,IAAI,EAAE,cAAc;MAAEC,IAAI,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAgB,CAAC;IACrE,KAAK,EAAE;MAAEF,IAAI,EAAE,eAAe;MAAEC,IAAI,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAgB,CAAC;IACtE,KAAK,EAAE;MAAEF,IAAI,EAAE,UAAU;MAAEC,IAAI,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAgB,CAAC;IACjE,KAAK,EAAE;MAAEF,IAAI,EAAE,YAAY;MAAEC,IAAI,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAgB,CAAC;IACnE,KAAK,EAAE;MAAEF,IAAI,EAAE,0BAA0B;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAgB,CAAC;IAEhF;IACA,KAAK,EAAE;MAAEF,IAAI,EAAE,WAAW;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAY,CAAC;IAC7D,KAAK,EAAE;MAAEF,IAAI,EAAE,mBAAmB;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAY,CAAC;IACrE,KAAK,EAAE;MAAEF,IAAI,EAAE,YAAY;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAY,CAAC;IAC9D,KAAK,EAAE;MAAEF,IAAI,EAAE,eAAe;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAY,CAAC;IAEjE;IACA,KAAK,EAAE;MAAEF,IAAI,EAAE,YAAY;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAS,CAAC;IAC3D,KAAK,EAAE;MAAEF,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAS,CAAC;IACtD,KAAK,EAAE;MAAEF,IAAI,EAAE,WAAW;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAS,CAAC;IAC1D,KAAK,EAAE;MAAEF,IAAI,EAAE,SAAS;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAS;EAC3D,CAAC;EAEDC,WAAW,EAAE;IACT;IACA,KAAK,EAAE;MAAEH,IAAI,EAAE,aAAa;MAAEC,IAAI,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAc,CAAC;IAClE,KAAK,EAAE;MAAEF,IAAI,EAAE,iBAAiB;MAAEC,IAAI,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAc,CAAC;IACtE,KAAK,EAAE;MAAEF,IAAI,EAAE,gBAAgB;MAAEC,IAAI,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAc,CAAC;IACrE,KAAK,EAAE;MAAEF,IAAI,EAAE,UAAU;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAS,CAAC;IACzD,KAAK,EAAE;MAAEF,IAAI,EAAE,WAAW;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAS,CAAC;IAC1D,KAAK,EAAE;MAAEF,IAAI,EAAE,WAAW;MAAEC,IAAI,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAQ;IACzD;EACJ;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,YAAY,GAAGA,CAAA,KAAM;EAC9B,MAAMC,OAAO,GAAGR,iBAAiB,CAAC,CAAC;EACnC,IAAI,CAACQ,OAAO,EAAE,OAAO,CAAC,CAAC;;EAEvB;EACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQH,OAAO,EAAE,CAAC;EAC1D,IAAIC,UAAU,EAAE;IACZ,OAAOG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC;EACjC;;EAEA;EACA,OAAOR,YAAY,CAACO,OAAO,CAAC,IAAI,CAAC,CAAC;AACtC,CAAC;;AAED;AACA,OAAO,MAAMM,aAAa,GAAIC,IAAI,IAAK;EACnC,MAAMP,OAAO,GAAGR,iBAAiB,CAAC,CAAC;EACnC,IAAI,CAACQ,OAAO,EAAE,OAAO,KAAK;EAE1BE,YAAY,CAACM,OAAO,CAAC,QAAQR,OAAO,EAAE,EAAEI,IAAI,CAACK,SAAS,CAACF,IAAI,CAAC,CAAC;EAC7D,OAAO,IAAI;AACf,CAAC;;AAED;AACA,OAAO,MAAMG,WAAW,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK;EACvC,MAAMC,WAAW,GAAGd,YAAY,CAAC,CAAC;EAClCc,WAAW,CAACF,IAAI,CAAC,GAAGC,IAAI;EACxB,OAAON,aAAa,CAACO,WAAW,CAAC;AACrC,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAGA,CAACH,IAAI,EAAEC,IAAI,KAAK;EAC1C,MAAMC,WAAW,GAAGd,YAAY,CAAC,CAAC;EAClC,IAAIc,WAAW,CAACF,IAAI,CAAC,EAAE;IACnBE,WAAW,CAACF,IAAI,CAAC,GAAGC,IAAI;IACxB,OAAON,aAAa,CAACO,WAAW,CAAC;EACrC;EACA,OAAO,KAAK;AAChB,CAAC;;AAED;AACA,OAAO,MAAME,cAAc,GAAIJ,IAAI,IAAK;EACpC,MAAME,WAAW,GAAGd,YAAY,CAAC,CAAC;EAClC,IAAIc,WAAW,CAACF,IAAI,CAAC,EAAE;IACnB,OAAOE,WAAW,CAACF,IAAI,CAAC;IACxB,OAAOL,aAAa,CAACO,WAAW,CAAC;EACrC;EACA,OAAO,KAAK;AAChB,CAAC;;AAED;AACA,OAAO,MAAMG,kBAAkB,GAAGA,CAAA,KAAM;EACpC,MAAMhB,OAAO,GAAGR,iBAAiB,CAAC,CAAC;EACnC,IAAI,CAACQ,OAAO,EAAE,OAAO,KAAK;EAE1BE,YAAY,CAACe,UAAU,CAAC,QAAQjB,OAAO,EAAE,CAAC;EAC1C,OAAO,IAAI;AACf,CAAC;;AAED;AACA,OAAO,MAAMkB,iBAAiB,GAAGA,CAAA,KAAM;EACnC,MAAMX,IAAI,GAAGR,YAAY,CAAC,CAAC;EAC3B,MAAMoB,UAAU,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACC,MAAM,CAACf,IAAI,CAAC,CAACgB,GAAG,CAACX,IAAI,IAAIA,IAAI,CAACf,QAAQ,CAAC,CAAC,CAAC;EAC/E,OAAOsB,UAAU,CAACK,IAAI,CAAC,CAAC;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}