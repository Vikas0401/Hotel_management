{"ast":null,"code":"// Bill History Service for managing saved bills\nimport { getCurrentUser, getCurrentHotelId } from './authService';\n\n// Save bill to history\nexport const saveBillToHistory = billData => {\n  const hotelId = getCurrentHotelId();\n  const user = getCurrentUser();\n  if (!hotelId || !billData) return false;\n  const billRecord = {\n    id: 'BILL_' + Date.now(),\n    billNumber: billData.billNumber,\n    date: billData.date,\n    time: billData.time,\n    customerInfo: billData.customerInfo,\n    items: billData.items,\n    subtotal: billData.subtotal,\n    tax: billData.tax,\n    total: billData.total,\n    hotelName: user === null || user === void 0 ? void 0 : user.hotelName,\n    savedAt: new Date().toISOString(),\n    savedBy: user === null || user === void 0 ? void 0 : user.username\n  };\n\n  // Get existing bills for this hotel\n  const existingBills = getBillHistory();\n\n  // Add new bill to the beginning of the array\n  const updatedBills = [billRecord, ...existingBills];\n\n  // Save to localStorage\n  localStorage.setItem(`bill_history_${hotelId}`, JSON.stringify(updatedBills));\n  return billRecord.id;\n};\n\n// Get bill history for current hotel\nexport const getBillHistory = () => {\n  const hotelId = getCurrentHotelId();\n  if (!hotelId) return [];\n  const bills = localStorage.getItem(`bill_history_${hotelId}`);\n  return bills ? JSON.parse(bills) : [];\n};\n\n// Get bill by ID\nexport const getBillById = billId => {\n  const bills = getBillHistory();\n  return bills.find(bill => bill.id === billId);\n};\n\n// Delete bill from history\nexport const deleteBillFromHistory = billId => {\n  const hotelId = getCurrentHotelId();\n  if (!hotelId) return false;\n  const bills = getBillHistory();\n  const updatedBills = bills.filter(bill => bill.id !== billId);\n  localStorage.setItem(`bill_history_${hotelId}`, JSON.stringify(updatedBills));\n  return true;\n};\n\n// Filter bills by customer name and date range\nexport const filterBills = filters => {\n  const bills = getBillHistory();\n  return bills.filter(bill => {\n    // Filter by customer name\n    if (filters.customerName) {\n      var _bill$customerInfo, _bill$customerInfo$na;\n      const customerName = ((_bill$customerInfo = bill.customerInfo) === null || _bill$customerInfo === void 0 ? void 0 : (_bill$customerInfo$na = _bill$customerInfo.name) === null || _bill$customerInfo$na === void 0 ? void 0 : _bill$customerInfo$na.toLowerCase()) || '';\n      const searchName = filters.customerName.toLowerCase();\n      if (!customerName.includes(searchName)) {\n        return false;\n      }\n    }\n\n    // Filter by date range\n    if (filters.startDate) {\n      const billDate = new Date(bill.date);\n      const startDate = new Date(filters.startDate);\n      if (billDate < startDate) {\n        return false;\n      }\n    }\n    if (filters.endDate) {\n      const billDate = new Date(bill.date);\n      const endDate = new Date(filters.endDate);\n      if (billDate > endDate) {\n        return false;\n      }\n    }\n    return true;\n  });\n};\n\n// Get bill statistics\nexport const getBillStatistics = () => {\n  const bills = getBillHistory();\n  const totalBills = bills.length;\n  const totalRevenue = bills.reduce((sum, bill) => sum + bill.total, 0);\n  const averageBillAmount = totalBills > 0 ? totalRevenue / totalBills : 0;\n\n  // Get today's bills\n  const today = new Date().toLocaleDateString();\n  const todaysBills = bills.filter(bill => bill.date === today);\n  const todaysRevenue = todaysBills.reduce((sum, bill) => sum + bill.total, 0);\n  return {\n    totalBills,\n    totalRevenue,\n    averageBillAmount,\n    todaysBills: todaysBills.length,\n    todaysRevenue\n  };\n};\n\n// Export bills to JSON (for backup/download)\nexport const exportBillHistory = () => {\n  const bills = getBillHistory();\n  const user = getCurrentUser();\n  const exportData = {\n    hotelName: user === null || user === void 0 ? void 0 : user.hotelName,\n    exportDate: new Date().toISOString(),\n    totalBills: bills.length,\n    bills: bills\n  };\n  return JSON.stringify(exportData, null, 2);\n};","map":{"version":3,"names":["getCurrentUser","getCurrentHotelId","saveBillToHistory","billData","hotelId","user","billRecord","id","Date","now","billNumber","date","time","customerInfo","items","subtotal","tax","total","hotelName","savedAt","toISOString","savedBy","username","existingBills","getBillHistory","updatedBills","localStorage","setItem","JSON","stringify","bills","getItem","parse","getBillById","billId","find","bill","deleteBillFromHistory","filter","filterBills","filters","customerName","_bill$customerInfo","_bill$customerInfo$na","name","toLowerCase","searchName","includes","startDate","billDate","endDate","getBillStatistics","totalBills","length","totalRevenue","reduce","sum","averageBillAmount","today","toLocaleDateString","todaysBills","todaysRevenue","exportBillHistory","exportData","exportDate"],"sources":["C:/Users/vkale/Documents/Vikas/New project/hotel-website/src/services/billHistoryService.js"],"sourcesContent":["// Bill History Service for managing saved bills\r\nimport { getCurrentUser, getCurrentHotelId } from './authService';\r\n\r\n// Save bill to history\r\nexport const saveBillToHistory = (billData) => {\r\n    const hotelId = getCurrentHotelId();\r\n    const user = getCurrentUser();\r\n    \r\n    if (!hotelId || !billData) return false;\r\n    \r\n    const billRecord = {\r\n        id: 'BILL_' + Date.now(),\r\n        billNumber: billData.billNumber,\r\n        date: billData.date,\r\n        time: billData.time,\r\n        customerInfo: billData.customerInfo,\r\n        items: billData.items,\r\n        subtotal: billData.subtotal,\r\n        tax: billData.tax,\r\n        total: billData.total,\r\n        hotelName: user?.hotelName,\r\n        savedAt: new Date().toISOString(),\r\n        savedBy: user?.username\r\n    };\r\n    \r\n    // Get existing bills for this hotel\r\n    const existingBills = getBillHistory();\r\n    \r\n    // Add new bill to the beginning of the array\r\n    const updatedBills = [billRecord, ...existingBills];\r\n    \r\n    // Save to localStorage\r\n    localStorage.setItem(`bill_history_${hotelId}`, JSON.stringify(updatedBills));\r\n    \r\n    return billRecord.id;\r\n};\r\n\r\n// Get bill history for current hotel\r\nexport const getBillHistory = () => {\r\n    const hotelId = getCurrentHotelId();\r\n    if (!hotelId) return [];\r\n    \r\n    const bills = localStorage.getItem(`bill_history_${hotelId}`);\r\n    return bills ? JSON.parse(bills) : [];\r\n};\r\n\r\n// Get bill by ID\r\nexport const getBillById = (billId) => {\r\n    const bills = getBillHistory();\r\n    return bills.find(bill => bill.id === billId);\r\n};\r\n\r\n// Delete bill from history\r\nexport const deleteBillFromHistory = (billId) => {\r\n    const hotelId = getCurrentHotelId();\r\n    if (!hotelId) return false;\r\n    \r\n    const bills = getBillHistory();\r\n    const updatedBills = bills.filter(bill => bill.id !== billId);\r\n    \r\n    localStorage.setItem(`bill_history_${hotelId}`, JSON.stringify(updatedBills));\r\n    return true;\r\n};\r\n\r\n// Filter bills by customer name and date range\r\nexport const filterBills = (filters) => {\r\n    const bills = getBillHistory();\r\n    \r\n    return bills.filter(bill => {\r\n        // Filter by customer name\r\n        if (filters.customerName) {\r\n            const customerName = bill.customerInfo?.name?.toLowerCase() || '';\r\n            const searchName = filters.customerName.toLowerCase();\r\n            if (!customerName.includes(searchName)) {\r\n                return false;\r\n            }\r\n        }\r\n        \r\n        // Filter by date range\r\n        if (filters.startDate) {\r\n            const billDate = new Date(bill.date);\r\n            const startDate = new Date(filters.startDate);\r\n            if (billDate < startDate) {\r\n                return false;\r\n            }\r\n        }\r\n        \r\n        if (filters.endDate) {\r\n            const billDate = new Date(bill.date);\r\n            const endDate = new Date(filters.endDate);\r\n            if (billDate > endDate) {\r\n                return false;\r\n            }\r\n        }\r\n        \r\n        return true;\r\n    });\r\n};\r\n\r\n// Get bill statistics\r\nexport const getBillStatistics = () => {\r\n    const bills = getBillHistory();\r\n    \r\n    const totalBills = bills.length;\r\n    const totalRevenue = bills.reduce((sum, bill) => sum + bill.total, 0);\r\n    const averageBillAmount = totalBills > 0 ? totalRevenue / totalBills : 0;\r\n    \r\n    // Get today's bills\r\n    const today = new Date().toLocaleDateString();\r\n    const todaysBills = bills.filter(bill => bill.date === today);\r\n    const todaysRevenue = todaysBills.reduce((sum, bill) => sum + bill.total, 0);\r\n    \r\n    return {\r\n        totalBills,\r\n        totalRevenue,\r\n        averageBillAmount,\r\n        todaysBills: todaysBills.length,\r\n        todaysRevenue\r\n    };\r\n};\r\n\r\n// Export bills to JSON (for backup/download)\r\nexport const exportBillHistory = () => {\r\n    const bills = getBillHistory();\r\n    const user = getCurrentUser();\r\n    \r\n    const exportData = {\r\n        hotelName: user?.hotelName,\r\n        exportDate: new Date().toISOString(),\r\n        totalBills: bills.length,\r\n        bills: bills\r\n    };\r\n    \r\n    return JSON.stringify(exportData, null, 2);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}